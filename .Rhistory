---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
actData <- read.csv(unz("activity.zip", "activity.csv"),
colClasses = c("numeric", "character","integer"), header = T)
```
Parse date in the order year, month, and days
```{r}
library(lubridate)
actData$date <- ymd(actData$date)
```
## What is mean total number of steps taken per day?
```{r}
totSteps <- tapply(actData$steps, actData$date, FUN = sum, na.rm = TRUE)
mean(totSteps)
```
Also the median could be calculated as follows
```{r}
median(totSteps)
```
For the total number of steps taken by day
```{r}
library(plyr)
library(dplyr)
steps <- summarize(group_by(filter(actData, !is.na(steps)), date), steps = sum(steps))
print(steps)
```
## What is the average daily activity pattern?
The histogram for the average daily activity
```{r}
steps2 <- group_by(filter(actData, !is.na(steps)), date)
print(steps2)
#st <- gsub(",", "", as.list(steps[2]))
#hist(as.numeric(st))
```
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
steps2
steps
View(steps)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
actData <- read.csv(unz("activity.zip", "activity.csv"),
colClasses = c("numeric", "character","integer"), header = T)
```
Parse date in the order year, month, and days
```{r}
library(lubridate)
actData$date <- ymd(actData$date)
```
## What is mean total number of steps taken per day?
```{r}
totSteps <- tapply(actData$steps, actData$date, FUN = sum, na.rm = TRUE)
mean(totSteps)
```
Also the median could be calculated as follows
```{r}
median(totSteps)
```
For the total number of steps taken by day
```{r}
library(plyr)
library(dplyr)
steps <- print(summarize(group_by(filter(actData, !is.na(steps)), date), steps = sum(steps)))
```
## What is the average daily activity pattern?
The histogram for the average daily activity
```{r}
#hist(as.vector(steps[2]))
```
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
steps
clear
as.vector(days)
as.vector(steps)
as.vector(steps[2])
hist(as.vector(steps[2]))
hist(x =as.vector(steps[2]))
hist(x = as.vector(steps[2]))
hist(x = as.numeric(as.vector(steps[2])))
hist(lapply(as.vector(steps[2]), as.numeric))
install.packages("ggplot2")
?ggplot
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
actData <- read.csv(unz("activity.zip", "activity.csv"),
colClasses = c("numeric", "character","integer"), header = T)
```
Parse date in the order year, month, and days
```{r}
library(lubridate)
actData$date <- ymd(actData$date)
```
## What is mean total number of steps taken per day?
```{r}
totSteps <- tapply(actData$steps, actData$date, FUN = sum, na.rm = TRUE)
mean(totSteps)
```
Also the median could be calculated as follows
```{r}
median(totSteps)
```
For the total number of steps taken by day
```{r}
library(plyr)
library(dplyr)
steps <- print(summarize(group_by(filter(actData, !is.na(steps)), date), steps = sum(steps)))
```
## What is the average daily activity pattern?
The histogram for the average daily activity
```{r}
library(ggplot2)
ggplot(steps, aes(x=date, y=steps))+geom_histogram(stat="identity")+ xlab("Dates")+ ylab("Steps")+ labs(title= "Total numbers of Steps per day")
```
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
?ggplot
?
?aes
hist(aes(x=date, y=steps))
hist(x=date, y=steps)
hist(x=date)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?alpha
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
actData <- read.csv(unz("activity.zip", "activity.csv"),
colClasses = c("numeric", "character","integer"), header = T)
```
Parse date in the order year, month, and days
```{r}
library(lubridate)
actData$date <- ymd(actData$date)
```
## What is mean total number of steps taken per day?
```{r}
totSteps <- tapply(actData$steps, actData$date, FUN = sum, na.rm = TRUE)
mean(totSteps)
```
Also the median could be calculated as follows
```{r}
median(totSteps)
```
For the total number of steps taken by day
```{r}
library(plyr)
library(dplyr)
steps <- print(summarize(group_by(filter(actData, !is.na(steps)), date), steps = sum(steps)))
```
## What is the average daily activity pattern?
The histogram for the average daily activity
```{r}
library(ggplot2)
ggplot(steps, aes(x=date, y=steps)) +
geom_histogram(stat="identity", colour = "black", fill = "green") +
xlab("Dates") + ylab("Steps") +
labs(title= "Total numbers of Steps per day")+
geom_vline(data=steps, aes(xintercept=steps.mean,  colour=cond),
linetype="dashed", size=1)
```
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
?geom_vline
rating
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
actData <- read.csv(unz("activity.zip", "activity.csv"),
colClasses = c("numeric", "character","integer"), header = T)
```
Parse date in the order year, month, and days
```{r}
library(lubridate)
actData$date <- ymd(actData$date)
```
## What is mean total number of steps taken per day?
```{r}
totSteps <- tapply(actData$steps, actData$date, FUN = sum, na.rm = TRUE)
mean(totSteps)
```
Also the median could be calculated as follows
```{r}
median(totSteps)
```
For the total number of steps taken by day
```{r}
library(plyr)
library(dplyr)
steps <- print(summarize(group_by(filter(actData, !is.na(steps)), date), steps = sum(steps)))
```
## What is the average daily activity pattern?
The histogram for the average daily activity
```{r}
library(ggplot2)
ggplot(steps, aes(x=date, y=steps)) +
geom_histogram(stat="identity", colour = "black", fill = "green") +
geom_vline(aes(xintercept=mean(, na.rm=T)),   # Ignore NA values for mean
color="red", linetype="dashed", size=1) +
xlab("Dates") + ylab("Steps") +
labs(title= "Total numbers of Steps per day")
```
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
rating
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
actData <- read.csv(unz("activity.zip", "activity.csv"),
colClasses = c("numeric", "character","integer"), header = T)
```
Parse date in the order year, month, and days
```{r}
library(lubridate)
actData$date <- ymd(actData$date)
```
## What is mean total number of steps taken per day?
```{r}
totSteps <- tapply(actData$steps, actData$date, FUN = sum, na.rm = TRUE)
mean(totSteps)
```
Also the median could be calculated as follows
```{r}
median(totSteps)
```
For the total number of steps taken by day
```{r}
library(plyr)
library(dplyr)
steps <- print(summarize(group_by(filter(actData, !is.na(steps)), date), steps = sum(steps)))
```
## What is the average daily activity pattern?
The histogram for the average daily activity
```{r}
#library(ggplot2)
#ggplot(steps, aes(x=date, y=steps)) +
#        geom_histogram(stat="identity", colour = "black", fill = "green") +
#        geom_vline(aes(xintercept=mean(, na.rm=T)),   # Ignore NA values for mean
#               color="red", linetype="dashed", size=1) +
#        xlab("Dates") + ylab("Steps") +
#        labs(title= "Total numbers of Steps per day")
```
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
rating
?poibin
poibin
library(poibin)
poibin
ppoibin
group_by(filter(actData, !is.na(steps)), date)
?summarize
summarize(group_by(filter(actData, !is.na(steps)), date))
summarize(group_by(filter(actData, !is.na(steps)), date), steps)
summarize(group_by(filter(actData, !is.na(steps)), date), sum(steps)
)
steps
sum(steps)
sum(steps[2])
print(steps)
])
print(steps[2])
print(actData$steps)
print(is.na(actData$steps))
print(sum(is.na(actData$steps)))
print(totMissingSteps)
```{r}
totMissingSteps <- sum(is.na(actData$steps))
print(totMissingSteps)
totMissingSteps <- sum(is.na(actData$steps))
totMissingDates <- sum(is.na(actData$date))
print(totMissin
totMissingSteps <- sum(is.na(actData$steps))
totMissingDates <- sum(is.na(actData$date))
print(totMissingSteps+totMissingDates)
totMissingSteps       <- sum(is.na(actData$steps))
totMissingDates       <- sum(is.na(actData$date))
totMissingIntervals   <- sum(is.na(actData$interval))
print(totMissingSteps+totMissingDates)
totMissingSteps       <- sum(is.na(actData$steps))
totMissingDates       <- sum(is.na(actData$date))
totMissingIntervals   <- sum(is.na(actData$interval))
print(totMissingSteps + totMissingDates + totMissingIntervals)
mean(steps)
mean(steps[2])
activity %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps=mean(steps)) %>%
print
daily <- activity %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps=mean(steps)) %>%
print
daily <- actData %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps=mean(steps)) %>%
print
?poibin
?plot
intervalAvgSteps
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
actData <- read.csv(unz("activity.zip", "activity.csv"),
colClasses = c("numeric", "character","integer"), header = T)
```
Parse date in the order year, month, and days
```{r}
library(lubridate)
actData$date <- ymd(actData$date)
```
## What is mean total number of steps taken per day?
```{r}
totSteps <- tapply(actData$steps, actData$date, FUN = sum, na.rm = TRUE)
mean(totSteps)
```
Also the median could be calculated as follows
```{r}
median(totSteps)
```
For the total number of steps taken by day
```{r}
library(plyr)
library(dplyr)
dailySteps <- print(summarize(group_by(filter(actData, !is.na(steps)), date), dailySteps = sum(steps)))
```
The histogram for the total daily steps
```{r}
library(ggplot2)
ggplot(dailySteps, aes(x=date, y=dailySteps)) +
geom_histogram(stat="identity", colour = "black", fill = "green") +
xlab("Days") + ylab("Number of Steps") +
labs(title= "Total number of steps per day")
```
## What is the average daily activity pattern?
Calculating the average number of steps in each interval
```{r}
intervalAvgSteps <- print(summarize(group_by(filter(actData, !is.na(steps)), interval), intervalAvgSteps = mean(steps)))
```
The time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
```{r}
plot(intervalAvgSteps, type = "l", xlab = "The 5-minute Intervals", ylab = "Avg. number of steps", main = "The average number of steps across all days")
```
Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
```{r}
max(intervalAvgSteps)
```
## Imputing missing values
Calculating the total number of missing values for all the coloumns
```{r}
totMissingSteps       <- sum(is.na(actData$steps))
totMissingDates       <- sum(is.na(actData$date))
totMissingIntervals   <- sum(is.na(actData$interval))
print(totMissingSteps + totMissingDates + totMissingIntervals)
```
Note There are only missing values in the **steps** coloumn
## Are there differences in activity patterns between weekdays and weekends?
intervalAvgSteps
max(intervalAvgSteps)
actData$interval[max(intervalAvgSteps)]
intervalAvgSteps
intervalAvgSteps[3]
intervalAvgSteps[2]
actData$interval[max(intervalAvgSteps[2])]
missing <- sum(is.na(actData))
missing
?mutate
newSteps <- print(summarize(group_by(newData, date), newSteps = sum(steps)))
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
actData <- read.csv(unz("activity.zip", "activity.csv"),
colClasses = c("numeric", "character","integer"), header = T)
```
Parse date in the order year, month, and days
```{r}
library(lubridate)
actData$date <- ymd(actData$date)
```
## What is mean total number of steps taken per day?
```{r}
totSteps <- tapply(actData$steps, actData$date, FUN = sum, na.rm = TRUE)
mean(totSteps)
```
Also the median could be calculated as follows
```{r}
median(totSteps)
```
For the total number of steps taken by day
```{r}
library(plyr)
library(dplyr)
dailySteps <- print(summarize(group_by(filter(actData, !is.na(steps)), date), dailySteps = sum(steps)))
```
The histogram for the total daily steps
```{r}
library(ggplot2)
ggplot(dailySteps, aes(x=date, y=dailySteps)) +
geom_histogram(stat="identity", colour = "black", fill = "green") +
xlab("Days") + ylab("Number of Steps") +
labs(title= "Total number of steps per day")
```
## What is the average daily activity pattern?
Calculating the average number of steps in each interval
```{r}
intervalAvgSteps <- print(summarize(group_by(filter(actData, !is.na(steps)), interval), intervalAvgSteps = mean(steps)))
```
The time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
```{r}
plot(intervalAvgSteps, type = "l", xlab = "The 5-minute Intervals", ylab = "Avg. number of steps", main = "The average number of steps across all days")
```
Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
```{r}
actData$interval[max(intervalAvgSteps[2])]
```
## Imputing missing values
Calculating the total number of missing values for all the coloumns
```{r}
totMissingSteps       <- sum(is.na(actData$steps))
totMissingDates       <- sum(is.na(actData$date))
totMissingIntervals   <- sum(is.na(actData$interval))
print(totMissingSteps + totMissingDates + totMissingIntervals)
```
Note There are only missing values in the **steps** coloumn
####I'll use the mean of the total number of steps in an interval to fill in the NA value's places
```{r}
newData <- mutate(group_by(actData, interval), steps = ifelse(is.na(steps),
mean(steps, na.rm=TRUE), steps))
head(newData)
```
I'll get the new steps in a separate variable
```{r}
newSteps <- print(summarize(group_by(newData, date), newSteps = sum(steps)))
```
Histogram for the new values
```{r}
ggplot(newSteps, aes(x=date, y=newSteps)) +
geom_histogram(stat="identity", colour = "black", fill = "red") +
xlab("Days") + ylab("New Number of Steps") +
labs(title= "The New total number of steps per day")
```
## Are there differences in activity patterns between weekdays and weekends?
newSteps <- print(summarize(group_by(newData, date), newSteps = sum(steps)))
newSteps <- print(summarize(group_by(newData, date), newSteps = sum(steps)))
newSteps <- print(summarize(group_by(newData, date), newSteps = sum(steps)))
mean(newSteps[2])
mean(newSteps[2], na.rm = T)
newSteps[2]
newStepsVec <- newSteps[2]
mean(newStepsVec, na.rm = T)
print(newStepsVec)
newDailySteps <- tapply(newData$steps, newData$date, FUN = mean)
newDailySteps
newDailySteps <- tapply(newData$steps, newData$date, FUN = sum)
newDailySteps
newDailySteps <- tapply(newData$steps, newData$date, FUN = sum, na.rm = T)
newDailySteps
newDailySteps <- tapply(newData$steps, newData$date, FUN = sum)
averageNewDailySteps <- mean(newDailySteps)
head(averageNewDailySteps)
medianNewDailySteps <- median(newDailySteps)
head(medianNewDailySteps)
source('~/.active-rstudio-document', echo=TRUE)
newData$whatDay <- as.factor(ifelse(weekdays(as.Date(newData$date)) %in% c("Saturday", "Sunday"), "weekend", "normalDay"))
newData$whatDay
